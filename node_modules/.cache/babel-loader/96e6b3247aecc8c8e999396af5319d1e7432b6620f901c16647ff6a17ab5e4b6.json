{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImangeLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport ParticlesBg from 'particles-bg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  const PAT = 'b2ae913fa5e549c8a521f54733f75092';\n  const USER_ID = 'methis23';\n  const APP_ID = 'my-first-application';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      // const clarifaiFace = data\n      // const image = document.getElementById(\"inputimage\");\n      // const width = Number(image.width);\n      // const height = Number(image.height);\n      console.log(data[0].top_row);\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", returnClarifaiRequestOptions(this.state.input)).then(response => response.json()).then(result => {\n        const regions = result.outputs[0].data.regions;\n        regions.forEach(region => {\n          // Accessing and rounding the bounding box values\n          const boundingBox = region.region_info.bounding_box;\n          const topRow = boundingBox.top_row.toFixed(3);\n          const leftCol = boundingBox.left_col.toFixed(3);\n          const bottomRow = boundingBox.bottom_row.toFixed(3);\n          const rightCol = boundingBox.right_col.toFixed(3);\n          region.data.concepts.forEach(concept => {\n            // Accessing and rounding the concept value\n            const name = concept.name;\n            const value = concept.value.toFixed(4);\n            console.log(`${name}: ${value} BBox: ${topRow}, ${leftCol}, ${bottomRow}, ${rightCol}`);\n          });\n        });\n        return regions;\n      }).then(response => {\n        this.calculateFaceLocation(response);\n      }).catch(error => console.log('error', error));\n    };\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {}\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        className: \"particles\",\n        color: \"#ffffff\",\n        num: 200,\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","ParticlesBg","jsxDEV","_jsxDEV","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","constructor","calculateFaceLocation","data","console","log","top_row","onInputChange","event","setState","input","target","value","onButtonSubmit","state","fetch","then","response","json","result","regions","outputs","forEach","region","boundingBox","region_info","bounding_box","topRow","toFixed","leftCol","left_col","bottomRow","bottom_row","rightCol","right_col","concepts","concept","name","catch","error","box","render","className","children","color","num","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/webdev/facerecognitionbrain/src/App.js"],"sourcesContent":["import React , {Component} from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImangeLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport ParticlesBg from 'particles-bg'\n\nconst returnClarifaiRequestOptions = (imageUrl) =>{\n  const PAT = 'b2ae913fa5e549c8a521f54733f75092';\n  const USER_ID = 'methis23';   \n  const APP_ID = 'my-first-application';\n  const IMAGE_URL = imageUrl;    \n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n    },\n    \"inputs\": [\n        {\n            \"data\": {\n                \"image\": {\n                    \"url\": IMAGE_URL\n                }\n            }\n        }\n    ]\n  });\n\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n}\n\n\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      input:\"\",\n      imageUrl: \"\",\n      box:{}\n    }\n\n  }\n\n  calculateFaceLocation = (data) =>{\n    // const clarifaiFace = data\n    // const image = document.getElementById(\"inputimage\");\n    // const width = Number(image.width);\n    // const height = Number(image.height);\n    console.log(data[0].top_row)\n  }\n\n  onInputChange=(event)=>{\n    this.setState({input: event.target.value})\n  }\n  onButtonSubmit = () =>{\n    this.setState({imageUrl:this.state.input})\n    fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", returnClarifaiRequestOptions(this.state.input) )\n      .then(response => response.json())\n      .then(result => {\n\n        const regions = result.outputs[0].data.regions;\n\n        regions.forEach(region => {\n            // Accessing and rounding the bounding box values\n            const boundingBox = region.region_info.bounding_box;\n            const topRow = boundingBox.top_row.toFixed(3);\n            const leftCol = boundingBox.left_col.toFixed(3);\n            const bottomRow = boundingBox.bottom_row.toFixed(3);\n            const rightCol = boundingBox.right_col.toFixed(3);\n\n            region.data.concepts.forEach(concept => {\n                // Accessing and rounding the concept value\n                const name = concept.name;\n                const value = concept.value.toFixed(4);\n\n                console.log(`${name}: ${value} BBox: ${topRow}, ${leftCol}, ${bottomRow}, ${rightCol}`);\n                \n            });\n            \n        });\n      return regions\n\n    })\n    .then(response => {\n      this.calculateFaceLocation(response)\n    })\n    .catch(error => console.log('error', error));\n\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <ParticlesBg className=\"particles\" color='#ffffff' num={200} type=\"cobweb\" bg={true} />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm \n          onInputChange = {this.onInputChange}\n          onButtonSubmit={this.onButtonSubmit}\n        />\n        <FaceRecognition imageUrl={this.state.imageUrl}/>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}